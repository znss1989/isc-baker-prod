{"version":3,"sources":["service/web3.js","service/statusService.js","components/EtherscanLink.js","components/AppStatus.js","service/ISCoinInst.js","components/BasicInfo.js","components/Transfer.js","components/Query.js","components/Mint.js","components/AppWallet.js","components/AppHint.js","App.js","serviceWorker.js","index.js"],"names":["web3","window","Web3","currentProvider","provider","providers","HttpProvider","statusService","isMetaMask","getNetwork","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","detectNetwork","abrupt","sent","stop","this","apply","arguments","getAccounts","_ref2","_callee2","_context2","eth","EtherscanLink","props","react_default","createElement","href","concat","address","AppStatus","Grid","columns","Column","width","Segment","Icon","name","network","type","isUnlocked","components_EtherscanLink","currentAccount","ISCoinInst","Contract","JSON","parse","ISCoin","interface","console","log","options","BasicInfo","Card","fluid","meta","description","symbol","decimals","totalSupply","contractAddress","owner","Transfer","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","transferRecipient","transferAmount","approveSpender","approveAmount","handleTransferRecipientChange","bind","assertThisInitialized","handleTransferAmountChange","handleTransferSubmit","event","setState","target","value","preventDefault","amountStr","utils","toWei","toString","inst","methods","transfer","send","from","account","Form","onSubmit","Field","className","htmlFor","id","placeholder","onChange","Button","primary","React","Component","Query","queryAccount","balance","handleQueryAccountChange","handleQuerySubmit","balanceOf","Message","fromWei","Mint","releaseTo","releaseAmount","releaseTimelockTo","releaseTimelockAmount","releaseTimelockTime","handleReleaseToChange","handleReleaseAmountChange","handleReleaseSubmit","handleReleaseTimelockToChange","handleReleaseTimelockAmountChange","handleReleaseTimelockTimeChange","handleReleaseTimelockSubmit","mint","_this2","Date","releaseTime","valueOf","mintTimelocked","AppWallet","activeItem","handleMenuClick","accounts","Menu","vertical","tabular","Item","active","onClick","components_BasicInfo","components_Transfer","components_Query","components_Mint","tokenDataFetch","AppHint","warning","App","live","Container","Header","as","Divider","horizontal","components_AppStatus","components_AppWallet","components_AppHint","length","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ca8bdde.chunk.js","sourcesContent":["import Web3 from 'web3';\r\n\r\nlet web3;\r\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') { // in browser and has metamask\r\n  web3 = new Web3(window.web3.currentProvider);\r\n} else { // server or no metamask\r\n  const provider = new Web3.providers.HttpProvider('https://ropsten.infura.io/QMjlpARxJBrcDKChTfPB');\r\n  web3 = new Web3(provider);\r\n}\r\n\r\nexport default web3;","import web3 from './web3';\r\nimport detectNetwork from 'web3-detect-network';\r\n\r\nconst isMetaMask = () => {\r\n  return window.web3.currentProvider.isMetaMask;\r\n};\r\n\r\nconst getNetwork = async () => {\r\n  return await detectNetwork(window.web3.currentProvider);\r\n};\r\n\r\nconst getAccounts = async () => {\r\n  return await web3.eth.getAccounts();\r\n};\r\n\r\nexport default {\r\n  isMetaMask,\r\n  getNetwork,\r\n  getAccounts\r\n};\r\n","import React from 'react';\r\n\r\nconst EtherscanLink = (props) => {\r\n  return (\r\n    <a href={`https://ropsten.etherscan.io/address/${props.address}`}>{props.address}</a>\r\n  );\r\n};\r\n\r\nexport default EtherscanLink;","import React from 'react';\r\nimport { Grid, Segment, Icon } from 'semantic-ui-react';\r\n\r\nimport EtherscanLink from './EtherscanLink';\r\n\r\nconst AppStatus = (props) => {\r\n  return (\r\n    <div>\r\n      <Grid columns={2} >\r\n        <Grid.Column width={6}>\r\n          <Segment>MetaMask启用：{ props.isMetaMask ? <Icon name='thumbs up outline' /> : <Icon name='x' /> }</Segment>\r\n        </Grid.Column>\r\n        <Grid.Column width={10}>\r\n          <Segment>连接区块链网络：{props.network.type}</Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n      <Grid columns={2}>\r\n        <Grid.Column width={6}>\r\n          <Segment>账户解锁：{ props.isUnlocked ? <Icon name='thumbs up outline' /> : <Icon name='x' /> }</Segment>\r\n        </Grid.Column>\r\n        <Grid.Column width={10}>\r\n          <Segment>我的账户：\r\n            <EtherscanLink address={props.currentAccount} />\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppStatus;","import web3 from './web3';\r\nimport ISCoin from '../ethereum/build/ISCoin.json';\r\n\r\nconst ISCoinInst = new web3.eth.Contract(\r\n  JSON.parse(ISCoin.interface),\r\n  '0x10d0F1528D938Fd5a23A3E8BA949E344344Da677'\r\n);\r\n\r\nconsole.log(ISCoinInst.options.address);\r\n// console.log(`ISCoin ABI:\\n${ISCoin.interface}`);\r\n// console.log(`ISCoin bytecode:\\n0x${ISCoin.bytecode}`);\r\n\r\nexport default ISCoinInst;","import React from 'react';\r\nimport { Card } from 'semantic-ui-react';\r\n\r\nimport EtherscanLink from './EtherscanLink';\r\n\r\nconst BasicInfo = (props) => {\r\n  return (\r\n    <div>\r\n      <Card fluid meta=\"代币名称\" description={props.name} />\r\n      <Card fluid meta=\"符号\" description={props.symbol} />\r\n      <Card fluid meta=\"精度（位）\" description={props.decimals} />\r\n      <Card fluid meta=\"总发行量（token）\" description={props.totalSupply} />\r\n      <Card fluid meta=\"合约地址\" description={<EtherscanLink address={props.contractAddress} />} />\r\n      <Card fluid meta=\"当前管理员\" description={<EtherscanLink address={props.owner} />} />\r\n    </div>    \r\n  );\r\n};\r\n\r\nexport default BasicInfo;","import React from 'react';\r\nimport { Segment, Form, Button } from 'semantic-ui-react';\r\n\r\nimport web3 from '../service/web3';\r\n\r\nclass Transfer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      transferRecipient: '',\r\n      transferAmount: '',\r\n      approveSpender: '',\r\n      approveAmount: '',\r\n    }\r\n    this.handleTransferRecipientChange = this.handleTransferRecipientChange.bind(this);\r\n    this.handleTransferAmountChange = this.handleTransferAmountChange.bind(this);\r\n    this.handleTransferSubmit = this.handleTransferSubmit.bind(this);\r\n  }\r\n\r\n  handleTransferRecipientChange(event) {\r\n    this.setState({\r\n      transferRecipient: event.target.value\r\n    });\r\n  }\r\n\r\n  handleTransferAmountChange(event) {\r\n    this.setState({\r\n      transferAmount: event.target.value\r\n    });\r\n  }\r\n\r\n  async handleTransferSubmit(event) {\r\n    event.preventDefault();\r\n    const amountStr= web3.utils.toWei(this.state.transferAmount, 'ether').toString();\r\n    await this.props.inst.methods.transfer(\r\n      this.state.transferRecipient, \r\n      amountStr\r\n    ).send({\r\n      from: this.props.account\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Segment>\r\n          <h3>普通转账</h3>\r\n          <Form onSubmit={this.handleTransferSubmit}>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"transfer-recipient\">\r\n                收款人地址\r\n              </label>\r\n              <input id=\"transfer-recipient\" type=\"text\" name=\"recipient\" placeholder=\"0x123...\" \r\n                value={this.state.transferRecipient} onChange={this.handleTransferRecipientChange} />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"transfer-amount\">\r\n                金额（tokens）\r\n              </label>\r\n              <input id=\"transfer-amount\" type=\"text\" name=\"amount\" placeholder=\"代币金额\" \r\n                value={this.state.transferAmount} onChange={this.handleTransferAmountChange} />\r\n            </Form.Field>\r\n            <Button className=\"form-row center-button\" type=\"submit\" primary fluid>转账</Button>\r\n          </Form>\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Transfer;","import React from 'react';\r\nimport { Segment, Form, Button, Message } from 'semantic-ui-react';\r\n\r\nimport web3 from '../service/web3';\r\n\r\nclass Query extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      queryAccount: '',\r\n      balance: ''\r\n    };\r\n    this.handleQueryAccountChange = this.handleQueryAccountChange.bind(this);\r\n    this.handleQuerySubmit = this.handleQuerySubmit.bind(this);\r\n  }\r\n\r\n  handleQueryAccountChange(event) {\r\n    this.setState({\r\n      queryAccount: event.target.value,\r\n      balance: ''\r\n    });\r\n  }\r\n\r\n  async handleQuerySubmit(event) {\r\n    event.preventDefault();\r\n    const balance = await this.props.inst.methods.balanceOf(this.state.queryAccount).call();\r\n    this.setState({\r\n      balance\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Segment>\r\n          <h3>余额查询</h3>\r\n          <Form onSubmit={this.handleQuerySubmit}>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"query-account\">\r\n                账户地址\r\n              </label>\r\n              <input id=\"query-account\" type=\"text\" name=\"account\" placeholder=\"0x123...\" value={this.state.queryAccount} onChange={this.handleQueryAccountChange} />\r\n            </Form.Field>\r\n            <Button className=\"form-row center-button\" type=\"submit\" primary fluid>查询</Button>\r\n          </Form>\r\n          { \r\n            this.state.balance ? \r\n            <Message>\r\n              <p>金额（tokens）： {web3.utils.fromWei(this.state.balance, 'ether')}</p>\r\n            </Message> : null\r\n          }\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Query;","import React from 'react';\r\nimport { Segment, Form, Button } from 'semantic-ui-react';\r\n\r\nimport web3 from '../service/web3';\r\n\r\nclass Mint extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      releaseTo: '',\r\n      releaseAmount: '',\r\n      releaseTimelockTo: '',\r\n      releaseTimelockAmount: '',\r\n      releaseTimelockTime: '2019-01-01T08:30',\r\n    };\r\n    this.handleReleaseToChange = this.handleReleaseToChange.bind(this);\r\n    this.handleReleaseAmountChange = this.handleReleaseAmountChange.bind(this);\r\n    this.handleReleaseSubmit = this.handleReleaseSubmit.bind(this);\r\n    this.handleReleaseTimelockToChange = this.handleReleaseTimelockToChange.bind(this);\r\n    this.handleReleaseTimelockAmountChange = this.handleReleaseTimelockAmountChange.bind(this);\r\n    this.handleReleaseTimelockTimeChange = this.handleReleaseTimelockTimeChange.bind(this);\r\n    this.handleReleaseTimelockSubmit = this.handleReleaseTimelockSubmit.bind(this);\r\n  }\r\n\r\n  handleReleaseToChange(event) {\r\n    this.setState({\r\n      releaseTo: event.target.value\r\n    });\r\n  }\r\n\r\n  handleReleaseAmountChange(event) {\r\n    this.setState({\r\n      releaseAmount: event.target.value\r\n    });\r\n  }\r\n\r\n  async handleReleaseSubmit(event) {\r\n    event.preventDefault();\r\n    const amountStr = web3.utils.toWei(this.state.releaseAmount, 'ether');\r\n    await this.props.inst.methods.mint(\r\n      this.state.releaseTo,\r\n      amountStr,\r\n      // new Date(this.state.releaseTime).valueOf() / 1000\r\n    ).send({\r\n      from: this.props.account\r\n    });\r\n  }\r\n\r\n  handleReleaseTimelockToChange(event) {\r\n    this.setState({\r\n      releaseTimelockTo: event.target.value\r\n    });\r\n  }\r\n\r\n  handleReleaseTimelockAmountChange(event) {\r\n    this.setState({\r\n      releaseTimelockAmount: event.target.value\r\n    });\r\n  }\r\n\r\n  handleReleaseTimelockTimeChange(event) {\r\n    this.setState({\r\n      releaseTimelockTime: event.target.value\r\n    }, () => {\r\n      console.log((new Date(this.state.releaseTime)).valueOf());\r\n    });\r\n  }\r\n\r\n  async handleReleaseTimelockSubmit(event) {\r\n    event.preventDefault();\r\n    const amountStr = web3.utils.toWei(this.state.releaseTimelockAmount, 'ether');\r\n    await this.props.inst.methods.mintTimelocked(\r\n      this.state.releaseTimelockTo,\r\n      amountStr,\r\n      new Date(this.state.releaseTimelockTime).valueOf() / 1000\r\n    ).send({\r\n      from: this.props.account\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Segment>\r\n          <h3>增发铸币</h3>\r\n          <p>仅限合约管理员</p>\r\n          <Form onSubmit={this.handleReleaseSubmit}>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"release-to\">\r\n                定向地址\r\n              </label>\r\n              <input id=\"release-to\" type=\"text\" name=\"to\" placeholder=\"0x123...\" \r\n                value={this.state.releaseTo} onChange={this.handleReleaseToChange} />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"release-amount\">\r\n                增发金额\r\n              </label>\r\n              <input id=\"release-amount\" type=\"text\" name=\"account\" placeholder=\"代币金额\" \r\n                value={this.state.releaseAmount} onChange={this.handleReleaseAmountChange} />\r\n            </Form.Field>\r\n            <Button className=\"form-row center-button\" type=\"submit\" primary fluid>铸币</Button>\r\n          </Form>\r\n        </Segment>\r\n        <Segment>\r\n          <h3>定时增发铸币</h3>\r\n          <p>仅限合约管理员</p>\r\n          <Form onSubmit={this.handleReleaseTimelockSubmit}>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"release-timelock-to\">\r\n                定向地址\r\n              </label>\r\n              <input id=\"release-timelock-to\" type=\"text\" name=\"to\" placeholder=\"0x123...\" \r\n                value={this.state.releaseTimelockTo} onChange={this.handleReleaseTimelockToChange} />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"release-timelock-amount\">\r\n                增发金额\r\n              </label>\r\n              <input id=\"release-timelock-amount\" type=\"text\" name=\"amount\" placeholder=\"代币金额\" \r\n                value={this.state.releaseTimelockAmount} onChange={this.handleReleaseTimelockAmountChange} />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"release-time\">\r\n                发行时间\r\n              </label>\r\n              <input id=\"release-timelock-time\" type=\"datetime-local\" name=\"date-time\" \r\n                value={this.state.releaseTimelockTime} onChange={this.handleReleaseTimelockTimeChange} />\r\n            </Form.Field>\r\n            <Button className=\"form-row center-button\" type=\"submit\" primary fluid>定时增发</Button>\r\n          </Form>\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Mint;","import React from 'react';\r\nimport { Grid, Menu } from 'semantic-ui-react';\r\n\r\nimport statusService from '../service/statusService';\r\nimport ISCoinInst from '../service/ISCoinInst';\r\nimport BasicInfo from './BasicInfo';\r\nimport Transfer from './Transfer';\r\nimport Query from './Query';\r\nimport Mint from './Mint';\r\n\r\nclass AppWallet extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeItem: 'info',\r\n      name: '',\r\n      symbol: '',\r\n      decimals: '',\r\n      totalSupply: '',\r\n      contractAddress: '',\r\n      owner: '',\r\n      account: ''\r\n    };\r\n    this.handleMenuClick = this.handleMenuClick.bind(this);\r\n  }\r\n\r\n  handleMenuClick(event, {name}) {\r\n    this.setState({\r\n      activeItem: name\r\n    });\r\n  }\r\n\r\n  async tokenDataFetch() {\r\n    const accounts = await statusService.getAccounts();\r\n    const account = accounts[0];\r\n    const contractAddress = \"0x10d0F1528D938Fd5a23A3E8BA949E344344Da677\";\r\n    const name = await ISCoinInst.methods.name().call();\r\n    const symbol = await ISCoinInst.methods.symbol().call();\r\n    const decimals = await ISCoinInst.methods.decimals().call();\r\n    const totalSupply = await ISCoinInst.methods.totalSupply().call() / (10 ** decimals);\r\n    const owner = await ISCoinInst.methods.owner().call();\r\n    this.setState({\r\n      name,\r\n      symbol,\r\n      decimals,\r\n      totalSupply,\r\n      contractAddress,\r\n      owner,\r\n      account\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Grid>\r\n          <Grid.Column width={3}>\r\n            <Menu fluid vertical tabular>\r\n              <Menu.Item name='info' active={this.state.activeItem === 'info'} onClick={this.handleMenuClick}>基本信息</Menu.Item>\r\n              <Menu.Item name='transfer' active={this.state.activeItem === 'transfer'} onClick={this.handleMenuClick}>转账</Menu.Item>\r\n              <Menu.Item name='query' active={this.state.activeItem === 'query'} onClick={this.handleMenuClick}>查询</Menu.Item>\r\n              <Menu.Item name='mint' active={this.state.activeItem === 'mint'} onClick={this.handleMenuClick}>铸币</Menu.Item>\r\n            </Menu>\r\n          </Grid.Column>\r\n          <Grid.Column width={13}>\r\n            {this.state.activeItem === 'info' ? <BasicInfo \r\n              inst={ISCoinInst}\r\n              account={this.state.account}\r\n              name={this.state.name} \r\n              symbol={this.state.symbol} \r\n              decimals={this.state.decimals} \r\n              totalSupply={this.state.totalSupply} \r\n              contractAddress={this.state.contractAddress} \r\n              owner={this.state.owner} /> : null}\r\n            {this.state.activeItem === 'transfer' ? <Transfer inst={ISCoinInst} account={this.state.account} /> : null}\r\n            {this.state.activeItem === 'query' ? <Query inst={ISCoinInst} /> : null}\r\n            {this.state.activeItem === 'mint' ? <Mint inst={ISCoinInst} account={this.state.account} /> : null}\r\n          </Grid.Column>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.tokenDataFetch();\r\n  }\r\n}\r\n\r\nexport default AppWallet;","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\nconst AppHint = (props) => {\r\n  return (\r\n    <div>\r\n      { props.isMetaMask ? (props.isUnlocked ? null : <Message warning>账户未解锁，无法完成交易！</Message>) : <Message warning>未连接MetaMask，无法操作合约！</Message>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHint;\r\n\r\n","import React from 'react';\nimport { Container, Header, Divider } from 'semantic-ui-react';\n\nimport './App.css';\nimport statusService from './service/statusService';\nimport AppStatus from './components/AppStatus';\nimport AppWallet from './components/AppWallet';\nimport AppHint from './components/AppHint';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMetaMask: false,\n      isUnlocked: false,\n      network: '',\n      currentAccount: ''\n    }\n  }\n\n  render() {\n    const live = this.state.isMetaMask && this.state.isUnlocked;\n    return (\n      <div className=\"App\">\n        <Container>\n          <Header as='h1'>ISCoin钱包</Header>\n          <Divider horizontal>状态</Divider>\n          <AppStatus \n            isMetaMask={this.state.isMetaMask} \n            network={this.state.network} \n            isUnlocked={this.state.isUnlocked} \n            currentAccount={this.state.currentAccount} \n          />\n          <Divider horizontal>钱包</Divider>\n          { live ? <AppWallet /> : <AppHint isMetaMask={this.state.isMetaMask} isUnlocked={this.state.isUnlocked} />}\n        </Container>\n      </div>\n    );\n  }\n\n  async componentDidMount() {\n    const isMetaMask = statusService.isMetaMask();\n    const network = await statusService.getNetwork();\n    const accounts = await statusService.getAccounts();\n    const isUnlocked = accounts.length > 0;\n    const currentAccount = accounts[0];\n    this.setState({\n      isMetaMask,\n      network,\n      isUnlocked,\n      currentAccount\n    });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}