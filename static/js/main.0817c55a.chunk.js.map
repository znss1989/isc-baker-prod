{"version":3,"sources":["service/web3.js","service/statusService.js","components/AppStatus.js","service/ISCoinInst.js","components/BasicInfo.js","components/Transfer.js","components/Query.js","components/Mint.js","components/AppWallet.js","components/AppHint.js","App.js","serviceWorker.js","index.js"],"names":["web3","window","Web3","currentProvider","provider","providers","HttpProvider","statusService","isMetaMask","getNetwork","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","detectNetwork","abrupt","sent","stop","this","apply","arguments","getAccounts","_ref2","_callee2","_context2","eth","AppStatus","props","react_default","createElement","Grid","columns","Column","width","Segment","Icon","name","network","type","isUnlocked","currentAccount","ISCoinInst","Contract","JSON","parse","ISCoin","interface","console","log","options","address","BasicInfo","Card","fluid","meta","description","symbol","decimals","totalSupply","contractAddress","owner","Transfer","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","transferRecipient","transferAmount","approveSpender","approveAmount","handleTransferRecipientChange","bind","assertThisInitialized","handleTransferAmountChange","handleTransferSubmit","event","setState","target","value","preventDefault","amountStr","utils","toWei","toString","inst","methods","transfer","send","from","account","onSubmit","className","htmlFor","id","placeholder","onChange","React","Component","Query","queryAccount","balance","handleQueryAccountChange","handleQuerySubmit","balanceOf","Message","fromWei","Mint","releaseTo","releaseAmount","releaseTimelockTo","releaseTimelockAmount","releaseTimelockTime","handleReleaseToChange","handleReleaseAmountChange","handleReleaseSubmit","handleReleaseTimelockToChange","handleReleaseTimelockAmountChange","handleReleaseTimelockTimeChange","handleReleaseTimelockSubmit","mint","_this2","Date","releaseTime","valueOf","mintTimelocked","AppWallet","activeItem","handleMenuClick","accounts","Menu","vertical","tabular","Item","active","onClick","components_BasicInfo","components_Transfer","components_Query","components_Mint","tokenDataFetch","AppHint","warning","App","live","Container","Header","as","Divider","horizontal","components_AppStatus","components_AppWallet","components_AppHint","length","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0817c55a.chunk.js","sourcesContent":["import Web3 from 'web3';\r\n\r\nlet web3;\r\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') { // in browser and has metamask\r\n  web3 = new Web3(window.web3.currentProvider);\r\n} else { // server or no metamask\r\n  const provider = new Web3.providers.HttpProvider('https://ropsten.infura.io/QMjlpARxJBrcDKChTfPB');\r\n  web3 = new Web3(provider);\r\n}\r\n\r\nexport default web3;","import web3 from './web3';\r\nimport detectNetwork from 'web3-detect-network';\r\n\r\nconst isMetaMask = () => {\r\n  return window.web3.currentProvider.isMetaMask;\r\n};\r\n\r\nconst getNetwork = async () => {\r\n  return await detectNetwork(window.web3.currentProvider);\r\n};\r\n\r\nconst getAccounts = async () => {\r\n  return await web3.eth.getAccounts();\r\n};\r\n\r\nexport default {\r\n  isMetaMask,\r\n  getNetwork,\r\n  getAccounts\r\n};\r\n","import React from 'react';\r\nimport { Grid, Segment, Icon } from 'semantic-ui-react';\r\n\r\nconst AppStatus = (props) => {\r\n  return (\r\n    <div>\r\n      <Grid columns={2} >\r\n        <Grid.Column width={6}>\r\n          <Segment>MetaMask启用：{ props.isMetaMask ? <Icon name='thumbs up outline' /> : <Icon name='x' /> }</Segment>\r\n        </Grid.Column>\r\n        <Grid.Column width={10}>\r\n          <Segment>连接区块链网络：{props.network.type}</Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n      <Grid columns={2}>\r\n        <Grid.Column width={6}>\r\n          <Segment>账户解锁：{ props.isUnlocked ? <Icon name='thumbs up outline' /> : <Icon name='x' /> }</Segment>\r\n        </Grid.Column>\r\n        <Grid.Column width={10}>\r\n          <Segment>我的账户：{props.currentAccount}</Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppStatus;","import web3 from './web3';\r\nimport ISCoin from '../ethereum/build/ISCoin.json';\r\n\r\nconst ISCoinInst = new web3.eth.Contract(\r\n  JSON.parse(ISCoin.interface),\r\n  '0x10d0F1528D938Fd5a23A3E8BA949E344344Da677'\r\n);\r\n\r\nconsole.log(ISCoinInst.options.address);\r\n// console.log(`ISCoin ABI:\\n${ISCoin.interface}`);\r\n// console.log(`ISCoin bytecode:\\n0x${ISCoin.bytecode}`);\r\n\r\nexport default ISCoinInst;","import React from 'react';\r\nimport { Card } from 'semantic-ui-react';\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n  return (\r\n    <div>\r\n      <Card fluid meta=\"代币名称\" description={props.name} />\r\n      <Card fluid meta=\"符号\" description={props.symbol} />\r\n      <Card fluid meta=\"精度（位）\" description={props.decimals} />\r\n      <Card fluid meta=\"总发行量（token）\" description={props.totalSupply} />\r\n      <Card fluid meta=\"合约地址\" description={props.contractAddress} />\r\n      <Card fluid meta=\"当前管理员\" description={props.owner} />\r\n    </div>    \r\n  );\r\n};\r\n\r\nexport default BasicInfo;","import React from 'react';\r\nimport { Segment } from 'semantic-ui-react';\r\n\r\nimport web3 from '../service/web3';\r\n\r\nclass Transfer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      transferRecipient: '',\r\n      transferAmount: '',\r\n      approveSpender: '',\r\n      approveAmount: '',\r\n    }\r\n    this.handleTransferRecipientChange = this.handleTransferRecipientChange.bind(this);\r\n    this.handleTransferAmountChange = this.handleTransferAmountChange.bind(this);\r\n    this.handleTransferSubmit = this.handleTransferSubmit.bind(this);\r\n  }\r\n\r\n  handleTransferRecipientChange(event) {\r\n    this.setState({\r\n      transferRecipient: event.target.value\r\n    });\r\n  }\r\n\r\n  handleTransferAmountChange(event) {\r\n    this.setState({\r\n      transferAmount: event.target.value\r\n    });\r\n  }\r\n\r\n  async handleTransferSubmit(event) {\r\n    event.preventDefault();\r\n    const amountStr= web3.utils.toWei(this.state.transferAmount, 'ether').toString();\r\n    await this.props.inst.methods.transfer(\r\n      this.state.transferRecipient, \r\n      amountStr\r\n    ).send({\r\n      from: this.props.account\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Segment>\r\n          <h3>普通转账</h3>\r\n          <form onSubmit={this.handleTransferSubmit}>\r\n            <label className=\"form-row\" htmlFor=\"transfer-recipient\">\r\n              收款人地址\r\n            </label>\r\n            <input id=\"transfer-recipient\" type=\"text\" name=\"recipient\" placeholder=\"0x123...\" value={this.state.transferRecipient} onChange={this.handleTransferRecipientChange} />\r\n            <label className=\"form-row\" htmlFor=\"transfer-amount\">\r\n              金额（tokens）\r\n            </label>\r\n            <input id=\"transfer-amount\" type=\"text\" name=\"amount\" placeholder=\"代币金额\" value={this.state.transferAmount} onChange={this.handleTransferAmountChange} />\r\n            <input className=\"form-row center-button\" type=\"submit\" value=\"转账\" />\r\n          </form>\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Transfer;","import React from 'react';\r\nimport { Segment, Message } from 'semantic-ui-react';\r\n\r\nimport web3 from '../service/web3';\r\n\r\nclass Query extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      queryAccount: '',\r\n      balance: ''\r\n    };\r\n    this.handleQueryAccountChange = this.handleQueryAccountChange.bind(this);\r\n    this.handleQuerySubmit = this.handleQuerySubmit.bind(this);\r\n  }\r\n\r\n  handleQueryAccountChange(event) {\r\n    this.setState({\r\n      queryAccount: event.target.value,\r\n      balance: ''\r\n    });\r\n  }\r\n\r\n  async handleQuerySubmit(event) {\r\n    event.preventDefault();\r\n    const balance = await this.props.inst.methods.balanceOf(this.state.queryAccount).call();\r\n    this.setState({\r\n      balance\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Segment>\r\n          <h3>余额查询</h3>\r\n          <form onSubmit={this.handleQuerySubmit}>\r\n            <label className=\"form-row\" htmlFor=\"query-account\">\r\n              账户地址\r\n            </label>\r\n            <input id=\"query-account\" type=\"text\" name=\"account\" placeholder=\"0x123...\" value={this.state.queryAccount} onChange={this.handleQueryAccountChange} />\r\n            <input className=\"form-row center-button\" type=\"submit\" value=\"查询\" />\r\n          </form>\r\n          { \r\n            this.state.balance ? \r\n            <Message>\r\n              <p>金额（tokens）： {web3.utils.fromWei(this.state.balance, 'ether')}</p>\r\n            </Message> : null\r\n          }\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Query;","import React from 'react';\r\nimport { Segment } from 'semantic-ui-react';\r\n\r\nimport web3 from '../service/web3';\r\n\r\nclass Mint extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      releaseTo: '',\r\n      releaseAmount: '',\r\n      releaseTimelockTo: '',\r\n      releaseTimelockAmount: '',\r\n      releaseTimelockTime: '2019-01-01T08:30',\r\n    };\r\n    this.handleReleaseToChange = this.handleReleaseToChange.bind(this);\r\n    this.handleReleaseAmountChange = this.handleReleaseAmountChange.bind(this);\r\n    this.handleReleaseSubmit = this.handleReleaseSubmit.bind(this);\r\n    this.handleReleaseTimelockToChange = this.handleReleaseTimelockToChange.bind(this);\r\n    this.handleReleaseTimelockAmountChange = this.handleReleaseTimelockAmountChange.bind(this);\r\n    this.handleReleaseTimelockTimeChange = this.handleReleaseTimelockTimeChange.bind(this);\r\n    this.handleReleaseTimelockSubmit = this.handleReleaseTimelockSubmit.bind(this);\r\n  }\r\n\r\n  handleReleaseToChange(event) {\r\n    this.setState({\r\n      releaseTo: event.target.value\r\n    });\r\n  }\r\n\r\n  handleReleaseAmountChange(event) {\r\n    this.setState({\r\n      releaseAmount: event.target.value\r\n    });\r\n  }\r\n\r\n  async handleReleaseSubmit(event) {\r\n    event.preventDefault();\r\n    const amountStr = web3.utils.toWei(this.state.releaseAmount, 'ether');\r\n    await this.props.inst.methods.mint(\r\n      this.state.releaseTo,\r\n      amountStr,\r\n      // new Date(this.state.releaseTime).valueOf() / 1000\r\n    ).send({\r\n      from: this.props.account\r\n    });\r\n  }\r\n\r\n  handleReleaseTimelockToChange(event) {\r\n    this.setState({\r\n      releaseTimelockTo: event.target.value\r\n    });\r\n  }\r\n\r\n  handleReleaseTimelockAmountChange(event) {\r\n    this.setState({\r\n      releaseTimelockAmount: event.target.value\r\n    });\r\n  }\r\n\r\n  handleReleaseTimelockTimeChange(event) {\r\n    this.setState({\r\n      releaseTimelockTime: event.target.value\r\n    }, () => {\r\n      console.log((new Date(this.state.releaseTime)).valueOf());\r\n    });\r\n  }\r\n\r\n  async handleReleaseTimelockSubmit(event) {\r\n    event.preventDefault();\r\n    const amountStr = web3.utils.toWei(this.state.releaseTimelockAmount, 'ether');\r\n    await this.props.inst.methods.mintTimelocked(\r\n      this.state.releaseTimelockTo,\r\n      amountStr,\r\n      new Date(this.state.releaseTimelockTime).valueOf() / 1000\r\n    ).send({\r\n      from: this.props.account\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Segment>\r\n          <h3>增发铸币</h3>\r\n          <p>仅限合约管理员</p>\r\n          <form onSubmit={this.handleReleaseSubmit}>\r\n            <label className=\"form-row\" htmlFor=\"release-to\">\r\n              定向地址\r\n            </label>\r\n            <input id=\"release-to\" type=\"text\" name=\"to\" placeholder=\"0x123...\" \r\n              value={this.state.releaseTo} onChange={this.handleReleaseToChange} />\r\n            <label className=\"form-row\" htmlFor=\"release-amount\">\r\n              增发金额\r\n            </label>\r\n            <input id=\"release-amount\" type=\"text\" name=\"account\" placeholder=\"代币金额\" \r\n              value={this.state.releaseAmount} onChange={this.handleReleaseAmountChange} />\r\n            <input className=\"form-row center-button\" type=\"submit\" value=\"铸币\" />\r\n          </form>\r\n        </Segment>\r\n        <Segment>\r\n          <h3>定时增发铸币</h3>\r\n          <p>仅限合约管理员</p>\r\n          <form onSubmit={this.handleReleaseTimelockSubmit}>\r\n            <label className=\"form-row\" htmlFor=\"release-timelock-to\">\r\n              定向地址\r\n            </label>\r\n            <input id=\"release-timelock-to\" type=\"text\" name=\"to\" placeholder=\"0x123...\" \r\n              value={this.state.releaseTimelockTo} onChange={this.handleReleaseTimelockToChange} />\r\n            <label className=\"form-row\" htmlFor=\"release-timelock-amount\">\r\n              增发金额\r\n            </label>\r\n            <input id=\"release-timelock-amount\" type=\"text\" name=\"amount\" placeholder=\"代币金额\" \r\n              value={this.state.releaseTimelockAmount} onChange={this.handleReleaseTimelockAmountChange} />\r\n            <label className=\"form-row\" htmlFor=\"release-time\">\r\n              发行时间\r\n            </label>\r\n            <input id=\"release-timelock-time\" type=\"datetime-local\" name=\"date-time\" \r\n              value={this.state.releaseTimelockTime} onChange={this.handleReleaseTimelockTimeChange} />\r\n            <input className=\"form-row center-button\" type=\"submit\" value=\"确定定时增发\" />\r\n          </form>\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Mint;","import React from 'react';\r\nimport { Grid, Menu } from 'semantic-ui-react';\r\n\r\nimport statusService from '../service/statusService';\r\nimport ISCoinInst from '../service/ISCoinInst';\r\nimport BasicInfo from './BasicInfo';\r\nimport Transfer from './Transfer';\r\nimport Query from './Query';\r\nimport Mint from './Mint';\r\n\r\nclass AppWallet extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeItem: 'info',\r\n      name: '',\r\n      symbol: '',\r\n      decimals: '',\r\n      totalSupply: '',\r\n      contractAddress: '',\r\n      owner: '',\r\n      account: ''\r\n    };\r\n    this.handleMenuClick = this.handleMenuClick.bind(this);\r\n  }\r\n\r\n  handleMenuClick(event, {name}) {\r\n    this.setState({\r\n      activeItem: name\r\n    });\r\n  }\r\n\r\n  async tokenDataFetch() {\r\n    const accounts = await statusService.getAccounts();\r\n    const account = accounts[0];\r\n    const contractAddress = \"0x10d0F1528D938Fd5a23A3E8BA949E344344Da677\";\r\n    const name = await ISCoinInst.methods.name().call();\r\n    const symbol = await ISCoinInst.methods.symbol().call();\r\n    const decimals = await ISCoinInst.methods.decimals().call();\r\n    const totalSupply = await ISCoinInst.methods.totalSupply().call() / (10 ** decimals);\r\n    const owner = await ISCoinInst.methods.owner().call();\r\n    this.setState({\r\n      name,\r\n      symbol,\r\n      decimals,\r\n      totalSupply,\r\n      contractAddress,\r\n      owner,\r\n      account\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Grid>\r\n          <Grid.Column width={3}>\r\n            <Menu fluid vertical tabular>\r\n              <Menu.Item name='info' active={this.state.activeItem === 'info'} onClick={this.handleMenuClick}>基本信息</Menu.Item>\r\n              <Menu.Item name='transfer' active={this.state.activeItem === 'transfer'} onClick={this.handleMenuClick}>转账</Menu.Item>\r\n              <Menu.Item name='query' active={this.state.activeItem === 'query'} onClick={this.handleMenuClick}>查询</Menu.Item>\r\n              <Menu.Item name='mint' active={this.state.activeItem === 'mint'} onClick={this.handleMenuClick}>铸币</Menu.Item>\r\n            </Menu>\r\n          </Grid.Column>\r\n          <Grid.Column width={13}>\r\n            {this.state.activeItem === 'info' ? <BasicInfo \r\n              inst={ISCoinInst}\r\n              account={this.state.account}\r\n              name={this.state.name} \r\n              symbol={this.state.symbol} \r\n              decimals={this.state.decimals} \r\n              totalSupply={this.state.totalSupply} \r\n              contractAddress={this.state.contractAddress} \r\n              owner={this.state.owner} /> : null}\r\n            {this.state.activeItem === 'transfer' ? <Transfer inst={ISCoinInst} account={this.state.account} /> : null}\r\n            {this.state.activeItem === 'query' ? <Query inst={ISCoinInst} /> : null}\r\n            {this.state.activeItem === 'mint' ? <Mint inst={ISCoinInst} account={this.state.account} /> : null}\r\n          </Grid.Column>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.tokenDataFetch();\r\n  }\r\n}\r\n\r\nexport default AppWallet;","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\nconst AppHint = (props) => {\r\n  return (\r\n    <div>\r\n      { props.isMetaMask ? (props.isUnlocked ? null : <Message warning>账户未解锁，无法完成交易！</Message>) : <Message warning>未连接MetaMask，无法操作合约！</Message>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHint;\r\n\r\n","import React from 'react';\nimport { Container, Header, Divider } from 'semantic-ui-react';\n\nimport './App.css';\nimport statusService from './service/statusService';\nimport AppStatus from './components/AppStatus';\nimport AppWallet from './components/AppWallet';\nimport AppHint from './components/AppHint';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMetaMask: false,\n      isUnlocked: false,\n      network: '',\n      currentAccount: ''\n    }\n  }\n\n  render() {\n    const live = this.state.isMetaMask && this.state.isUnlocked;\n    return (\n      <div className=\"App\">\n        <Container>\n          <Header as='h1'>ISCoin钱包</Header>\n          <Divider horizontal>状态</Divider>\n          <AppStatus \n            isMetaMask={this.state.isMetaMask} \n            network={this.state.network} \n            isUnlocked={this.state.isUnlocked} \n            currentAccount={this.state.currentAccount} \n          />\n          <Divider horizontal>钱包</Divider>\n          { live ? <AppWallet /> : <AppHint isMetaMask={this.state.isMetaMask} isUnlocked={this.state.isUnlocked} />}\n        </Container>\n      </div>\n    );\n  }\n\n  async componentDidMount() {\n    const isMetaMask = statusService.isMetaMask();\n    const network = await statusService.getNetwork();\n    const accounts = await statusService.getAccounts();\n    const isUnlocked = accounts.length > 0;\n    const currentAccount = accounts[0];\n    this.setState({\n      isMetaMask,\n      network,\n      isUnlocked,\n      currentAccount\n    });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}